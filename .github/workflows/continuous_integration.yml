name: Continuous Integration

on:
  pull_request:
    types:
      - opened
      - reopened
    branches:
      - develop
      - master

  workflow_call:

  workflow_dispatch:

jobs:
  cache_and_install:
    runs-on: ubuntu-latest

    outputs:
      pnpm_cache_dir: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Setup pnpm cache
        uses: actions/cache@v3
        id: cache-nodemodules
        with:
          path: |
            **/node_modules
            ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: pnpm install --no-frozen-lockfile

  build:
    needs: cache_and_install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ${{ needs.cache_and_install.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Build
        run: pnpm build
